name: Create Issue in Repository

on:
  workflow_call:
    secrets:
      token:
        required: true
    inputs:
        owner:
            description: 'Repository Owner'
            required: true
            type: string
        repo-name:
            description: 'Repository Name'
            required: true
            type: string
        title:
            description: 'Issue Title'
            required: true
            type: string
        body:
            description: 'Issue body'
            required: true
            type: string
        assignees:
            description: 'Assignees'
            required: true
            type: string
        labels:
            description: 'Labels (CSV)'
            required: false
            type: string

jobs:
  create_issue_manually:
    runs-on: ubuntu-latest
    
    permissions:
      issues: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Create issue using REST API
    #   id: create-issue
    #   run: |
        
    #     IFS=','
        
    #     read -a my_array <<< "${{inputs.labels}}"
        
    #     IFS=' '
        
    #     output_string="["
        
    #     for element in "${my_array[@]}"
    #     do
    #         output_string+="\"$element\","
    #     done
        
    #     output_string="${output_string%,}]"

    #     echo $output_string

    #     curl --request POST \
    #     --url https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo-name }}/issues \
    #     --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
    #     --header 'content-type: application/json' \
    #     --data '{
    #        "title": "Manual issue for repo: ${{ inputs.owner }}/${{ inputs.repo-name }} Title: ${{ inputs.title }}",
    #        "body": "Details: ${{ inputs.body }}. \n\n This issue was manually created by the GitHub Action workflow **${{ github.workflow }}**.",
    #        "assignees":["${{ inputs.assignees }}"],
    #        "labels":$output_string
    #     }' \
    #     --fail

    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
        
